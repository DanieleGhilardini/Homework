L'attributo name degli elementi input serve come chiave a cui associare un valore quando si fa il form submit, 
quindi tendenzialmente non si usano caratteri speciali o spazi.

Di norma ci deve essere un solo heading dello stesso livello per sezione.
Inoltre gli heading rappresentano dei titoli. Detto ciò, spesso è difficile stabilire il ruolo di un elemento in un sito o un'applicazione...

Per quanto riguarda il sito, 

c'è un errore nell'html,
il primo div#top non si chiude


è un po' troppo grande. 
Considera che nella versione originale ad una risoluzione di 1080px di larghezza il contenuto ancora non inizia ad andare a capo.
Inoltre penso che potresti usare elementi più semantici e usare gli id con delle descrizioni più precise (es <p id="title"> non va bene)

ad es.:
main
article
header
section
footer
h1 - h6 
etc.

Quando vedi del css che si ripete valuta di utilizzare una variabile css o un selector che selezioni più elementi contemporaneamente

Personalmente, avrei usato grid, o flex ma con elementi flex-basis 50%. Avrebbe reso l'html più semplice da strutturare

con flex 
<div flexContainer>
  <div></div>
  <div></div>
</div>
<div flexContainer>
  <div></div>
  <div></div>
</div>

con grid 
<div gridContainer>
  <div></div>
  <div></div>
  <div></div>
  <div></div>
</div>

con flex + flex-basis 50%
<div flexContainer>
  <div flexBasis=50%></div>
  <div flexBasis=50%></div>
  <div flexBasis=50%></div>
  <div flexBasis=50%></div>
</div>

Quando usi flex preferisci le proprietà flex-grow, flex-shrink e flex-basis a width.

la min-width dei 4 riquadri è un po' troppo larga... conta che alcuni telefoni scendono fino a 350px di larghezza. 
Con 600px siamo nel mondo dei tablet piccoli o smartphone larghi.


Graficamente hai fatto un'ottimo lavoro! L'aspetto è praticamente identico.
Continua a lavorarci per migliorare la leggibilità e la struttura sia del css che dell'html 


Ciao Daniele. Congratulazioni per aver completato il corso!
Hai fatto un sacco di progressi in così poco tempo. 
Anche se non sei riuscito a stare al passo con gli esercizi bisogna riconoscere quanto tu abbia imparato.
Come ti avevo detto, tutte queste nozioni che ho cercato di passarvi in un mese io le ho apprese in 4 anni.
Ho speso 1 anno e mezzo di formazione part-time prima di fare di una parte di queste conoscenze una professione, quindi ti direi di non preoccuparti troppo delle tempistiche del tuo apprendimento.
Ti assicuro che, visti i tuoi esercizi e il tuo atteggiamento, sei in grado di farlo anche tu, se vuoi. Questa porta è sempre aperta. 

Ti lascio alcuni consigli di routine:

Ricorda di pulire il codice e rifattorizzare prima di fare git push: 
 - crea nuovi componenti che rappresentano elementi logici dell'applicazione a cui ti sembra logico dare un nome (es. Todo-list, todo-item).
 - rimuovi componenti che non sembrano avere più un senso logico, e il cui nome non significa niente.
 - scomponi le funzioni troppo lunghe e con troppi parametri. Una funzione deve fare una sola cosa...
 - rinomina funzioni e variabili se pensi che il loro nome può migliorare ed essere più esplicito.
 - semplifica le logiche con i boolean il più possibile, meno if (e meno if innestati) ci sono, e più il codice è facile da leggere.
 etc. etc.

Cerca di rendere il codice leggibile, studia nuove tecniche per farlo. Questo è un lavoro di squadra.
Allarga la tua comprensione della programmazione imparando nuovi linguaggi e nuove tecnologie e nuovi ambiti. 
Sperimenta in continuazione, anche a costo di sbagliare. C'è sempre git per rimediare agli errori.